%
% pxgentombow.sty
% written by Hironobu Yamashita (@aminophen)
%
% This package is part of the gentombow bundle.
% https://github.com/aminophen/gentombow
%

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{pxgentombow}
    [2018/04/12 v0.9f Generate crop mark 'tombow']
\def\pxgtmb@pkgname{pxgentombow}

%% error status (shared with gentombow.sty)
\ifx\pxgtmb@errlevel\@undefined
  \chardef\pxgtmb@errlevel=\z@
\fi

%% supported engines
\ifx\pfmtversion\@undefined
  \@ifpackageloaded{luatexja}{}{\chardef\pxgtmb@errlevel=\@ne}
\fi
\ifnum\pxgtmb@errlevel>\z@
  \ifx\pxgtmb@emu@pkgname\@undefined % gentombow.sty not loaded
    \PackageError{\pxgtmb@pkgname}{%
      Only pLaTeX, upLaTeX and LuaTeX-ja are supported!\MessageBreak
      Please use `gentombow' package instead}\@ehc
    \expandafter\expandafter\expandafter\endinput\expandafter
  \fi
\else
  \@namedef{ver@gentombow.sty}{}% fake
\fi

%% import from jsclasses
\hour\time \divide\hour by 60\relax
\@tempcnta\hour \multiply\@tempcnta 60\relax
\minute\time \advance\minute-\@tempcnta

\ifnum\mag=\@m\else
  % if BXjscls is detected and \mag != 1000,
  % the layout will be definitely broken
  \ifx\bxjs@param@mag\@undefined\else
    \PackageError{\pxgtmb@pkgname}{%
      It seems you are using Japanese `BXjscls'\MessageBreak
      (bxjsarticle, bxjsbook, bxjsreport, etc.) or\MessageBreak
      some derived class. Try adding `nomag' or\MessageBreak
      `nomag*' to the class option list}\@ehc
  \fi
\fi

%% this package will use tombo feature in pLaTeX kernel
%  if tombow-related option is not included in class option list,
%  show info and enable it now
\iftombow\else
  % if jsclasses is detected and \mag != 1000, it's too late
  % -- When a size option other than `10pt' is specified,
  %    jsclasses uses \mag and calculates \oddsidemargin and \topmargin
  %    differently, depending on tombow status.
  %    In order to force `jsclasses' to calculate correctly,
  %    `tombow' or `tombo' is required as a class option.
  %    ... or, you may add `nomag' or `nomag*' instead.
  \ifnum\mag=\@m\else \ifx\inv@mag\@undefined\else
    \PackageError{\pxgtmb@pkgname}{%
      It seems you are using Japanese `jsclasses'\MessageBreak
      (jsarticle, jsbook, jsreport, etc.) or some\MessageBreak
      derived class. Please add `tombow' or `tombo'\MessageBreak
      to the class option list}\@ehc
  \fi \fi
  % BXjscls is already checked above, no check here
  \PackageInfo\pxgtmb@pkgname{tombow feature enabled by \pxgtmb@pkgname}
\fi
\tombowtrue %\tombowdatetrue %% enabled by tombowbanner option
\setlength{\@tombowwidth}{.1\p@}%

%% import from jsclasses
\@bannertoken{%
  \jobname\space(\number\year-\two@digits\month-\two@digits\day
  \space\two@digits\hour:\two@digits\minute)}

%% prepare dimension
\ifx\stockheight\@undefined \newdimen\stockheight \fi
\ifx\stockwidth\@undefined  \newdimen\stockwidth  \fi

%% prepare flag
\newif\ifpxgtmb@switch    \pxgtmb@switchfalse
\newif\ifpxgtmb@landscape \pxgtmb@landscapefalse

%% passed from class options
%% should be declared first inside this package (least priority)
\DeclareOption{tombow}{\tombowdatetrue}
\DeclareOption{tombo}{\tombowdatefalse}
\DeclareOption{mentuke}{\tombowdatefalse \setlength{\@tombowwidth}{\z@}}

%% package options part 1
\DeclareOption{tombowbanner}{\tombowdatetrue}
\DeclareOption{notombowbanner}{\tombowdatefalse}
\DeclareOption{tombowdate}{% obsolete since v0.9c (2018/01/11)
  \PackageWarning{\pxgtmb@pkgname}{%
    Option `tombowdate' is renamed;\MessageBreak
    use `tombowbanner' instead}%
  \tombowdatetrue}
\DeclareOption{notombowdate}{% obsolete since v0.9c (2018/01/11)
  \PackageWarning{\pxgtmb@pkgname}{%
    Option `notombowdate' is renamed;\MessageBreak
    use `notombowbanner' instead}%
  \tombowdatefalse}

%% register a list of candidate papersize
%  * \pxgtmb@addpapersize[<tombowname>]{<papername>}{<shorter edge>}{<longer edge>}
%      used for declaration of papersize.
%      when no option is specified (that is, \ifpxgtmb@switch = \iffalse),
%      also used for automatic stocksize determination.
%      * if <tombowname> = \@empty, the next <papername> is assumed.
%      * if <tombowname> = n, stocksize is set to papersize + 2in.
\def\pxgtmb@addpapersize{\@ifnextchar[{\pxgtmb@addp@persize}{\pxgtmb@addp@persize[\@empty]}}
\def\pxgtmb@addp@persize[#1]#2#3#4{%
  % get current papersize and search through known standard in ascending order
  \ifx\pxgtmb@guessedtombow\@empty
  \ifx\pxgtmb@guessedpaper\@empty
    % shorter edge -> \@tempdima, longer edge -> \@tempdimb
    \ifdim\paperwidth>\paperheight\relax
      \pxgtmb@landscapetrue
      \@tempdima\paperheight \@tempdimb\paperwidth
    \else
      \pxgtmb@landscapefalse
      \@tempdima\paperwidth  \@tempdimb\paperheight
    \fi
    % \@ovri and \@ovro are used temporarily (safe enough)
    \@ovri=#3\relax
    \@ovro=#4\relax
    % if \mag != 1000 and \inv@mag is defined, assume jsclasses-style \mag employment
    \ifnum\mag=\@m\else \ifx\inv@mag\@undefined\else
      \@ovri=\inv@mag\@ovri\relax
      \@ovro=\inv@mag\@ovro\relax
    \fi \fi
    % compare
    \ifdim\@tempdima=\@ovri\relax \ifdim\@tempdimb=\@ovro\relax
      \def\pxgtmb@guessedpaper{#2}%
      \ifx#1\@empty\else
        \def\pxgtmb@guessedtombow{#1}%
        \if n\pxgtmb@guessedtombow\else
          \ExecuteOptions{tombow-#1}% package defaults to tombowdatetrue
          \pxgtmb@switchfalse
        \fi
      \fi
    \fi \fi
  \else
    \def\pxgtmb@guessedtombow{#2}% save for console message
    \pxgtmb@setstock{#3}{#4}%      set stockwidth/height
  \fi\fi
  \DeclareOption{tombow-#2}{%
    \pxgtmb@switchtrue
    \tombowdatetrue
    \pxgtmb@setstock{#3}{#4}%
  }%
  \DeclareOption{tombo-#2}{%
    \pxgtmb@switchtrue
    \tombowdatefalse
    \pxgtmb@setstock{#3}{#4}%
  }%
  \DeclareOption{mentuke-#2}{%
    \pxgtmb@switchtrue
    \tombowdatefalse
    \setlength{\@tombowwidth}{\z@}%
    \pxgtmb@setstock{#3}{#4}%
  }%
}
\def\pxgtmb@setstock#1#2{%
  \ifpxgtmb@landscape
    \setlength\stockwidth{#2}%
    \setlength\stockheight{#1}%
  \else
    \setlength\stockwidth{#1}%
    \setlength\stockheight{#2}%
  \fi
  % if \mag != 1000 and \inv@mag is defined, assume jsclasses-style \mag employment
  \ifnum\mag=\@m\else \ifx\inv@mag\@undefined\else
    \stockwidth=\inv@mag\stockwidth\relax
    \stockheight=\inv@mag\stockheight\relax
  \fi \fi
}%
\@onlypreamble\pxgtmb@addpapersize
\@onlypreamble\pxgtmb@addp@persize
\@onlypreamble\pxgtmb@setstock

%% initialize before search
\def\pxgtmb@guessedpaper{}
\def\pxgtmb@guessedtombow{}
\@onlypreamble\pxgtmb@guessedpaper
\@onlypreamble\pxgtmb@guessedtombow

%% package options part 2
%  ISO A series <=> JIS B series in the ascending order
\pxgtmb@addpapersize{a10}{26mm}{37mm}
\pxgtmb@addpapersize{b10}{32mm}{45mm}
\pxgtmb@addpapersize{a9}{37mm}{52mm}
\pxgtmb@addpapersize{b9}{45mm}{64mm}
\pxgtmb@addpapersize{a8}{52mm}{74mm}
\pxgtmb@addpapersize{b8}{64mm}{91mm}
\pxgtmb@addpapersize{a7}{74mm}{105mm}
\pxgtmb@addpapersize{b7}{91mm}{128mm}
\pxgtmb@addpapersize{a6}{105mm}{148mm}
\pxgtmb@addpapersize{b6}{128mm}{182mm}
\pxgtmb@addpapersize{a5}{148mm}{210mm}
\pxgtmb@addpapersize{b5}{182mm}{257mm}
\pxgtmb@addpapersize{a4}{210mm}{297mm}
\pxgtmb@addpapersize{b4}{257mm}{364mm}
\pxgtmb@addpapersize{a3}{297mm}{420mm}
\pxgtmb@addpapersize{b3}{364mm}{515mm}
\pxgtmb@addpapersize{a2}{420mm}{594mm}
\pxgtmb@addpapersize{b2}{515mm}{728mm}
\pxgtmb@addpapersize{a1}{594mm}{841mm}
\pxgtmb@addpapersize{b1}{728mm}{1030mm}
\pxgtmb@addpapersize[n]{a0}{841mm}{1189mm}
\pxgtmb@addpapersize[n]{b0}{1030mm}{1456mm}

%% package options part 3
%  ISO C series
\pxgtmb@addpapersize[a9]{c10}{28mm}{40mm}
\pxgtmb@addpapersize[a8]{c9}{40mm}{57mm}
\pxgtmb@addpapersize[a7]{c8}{57mm}{81mm}
\pxgtmb@addpapersize[a6]{c7}{81mm}{114mm}
\pxgtmb@addpapersize[a5]{c6}{114mm}{162mm}
\pxgtmb@addpapersize[a4]{c5}{162mm}{229mm}
\pxgtmb@addpapersize[a3]{c4}{229mm}{354mm}
\pxgtmb@addpapersize[a2]{c3}{324mm}{458mm}
\pxgtmb@addpapersize[a1]{c2}{458mm}{648mm}
\pxgtmb@addpapersize[a0]{c1}{648mm}{917mm}
\pxgtmb@addpapersize[n]{c0}{917mm}{1297mm}
%  misc
\pxgtmb@addpapersize[b4]{a4j}{210mm}{297mm}
\pxgtmb@addpapersize[b5]{a5j}{148mm}{210mm}
\pxgtmb@addpapersize[a3]{b4j}{257mm}{364mm}
\pxgtmb@addpapersize[a4]{b5j}{182mm}{257mm}
\pxgtmb@addpapersize[b4]{a4var}{210mm}{283mm}
\pxgtmb@addpapersize[a4]{b5var}{182mm}{230mm}
\pxgtmb@addpapersize[a3]{letter}{8.5in}{11in}
\pxgtmb@addpapersize[a3]{legal}{8.5in}{14in}
\pxgtmb@addpapersize[a4]{executive}{7.25in}{10.5in}

%% package options part 4
\def\pxgtmb@pdfbox@status{0}
\DeclareOption{pdfbox}{\def\pxgtmb@pdfbox@status{1}}
\DeclareOption{dvips}{\def\pxgtmb@driver{dvips.def}}
\DeclareOption{dvipdfmx}{\def\pxgtmb@driver{dvipdfmx.def}}
\DeclareOption{pdftex}{\def\pxgtmb@driver{pdftex.def}}
\DeclareOption{luatex}{\def\pxgtmb@driver{luatex.def}}

%% default options
\ExecuteOptions{tombowbanner}% package defaults to tombowdatetrue
\ProcessOptions

%% display search result
%  if any of explicit size option is specified, \ifpxgtmb@switch = \iftrue.
%  otherwise, automatic size detection should be successful.
\ifpxgtmb@switch\else
  % check status
  \@tempcnta=\z@\relax
  \ifx\pxgtmb@guessedpaper\@empty
    \advance\@tempcnta\@ne\relax
  \fi
  \ifx\pxgtmb@guessedtombow\@empty
    \advance\@tempcnta\tw@\relax
  \else\if n\pxgtmb@guessedtombow
    \advance\@tempcnta\tw@\relax
  \fi\fi
  % message
  \ifodd\@tempcnta
    %\PackageWarningNoLine\pxgtmb@pkgname{%
    %  No size option specified, and automatic papersize\MessageBreak
    %  detection also failed}
  \else
    \typeout{***** Package \pxgtmb@pkgname\space detected \pxgtmb@guessedpaper paper. *****}
  \fi
  \ifnum\@tempcnta>\@ne\relax
    \PackageWarningNoLine\pxgtmb@pkgname{%
      Output size cannot be determined. Please add size\MessageBreak
      option (e.g. `tombow-a4') to specify output size.\MessageBreak
      Falling back to +1in ..}
    \stockwidth\paperwidth   \advance\stockwidth 2in
    \stockheight\paperheight \advance\stockheight 2in
  \else
    \typeout{***** Now the output size is automatically set to \pxgtmb@guessedtombow. *****}
  \fi
\fi

%% warnings
\ifdim\stockwidth<\paperwidth
  \PackageWarningNoLine\pxgtmb@pkgname{%
    \string\stockwidth\space is smaller than \string\paperwidth!\MessageBreak
    Is this really what you want?}
\fi
\ifdim\stockheight<\paperheight
  \PackageWarningNoLine\pxgtmb@pkgname{%
    \string\stockheight\space is smaller than \string\paperheight!\MessageBreak
    Is this really what you want?}
\fi

%% make tombow box according to tombowdate & \@tombowwidth status
\maketombowbox

%% shift amount
\hoffset .5\stockwidth
\advance\hoffset -.5\paperwidth
\advance\hoffset-1truein\relax
\voffset .5\stockheight
\advance\voffset -.5\paperheight
\advance\voffset-1truein\relax

%% pdf "digital tombo" (driver-dependent)
\if 1\pxgtmb@pdfbox@status
\begingroup
\def\pxgtmb@PDF@setbp#1#2{%
  \@tempdima=.996264#2\relax % 0.996264 = 72/72.27 (cf. 1in = 72.27pt = 72bp)
  \edef#1{\strip@pt\@tempdima}}
%\pxgtmb@PDF@setbp\pxgtmb@PDF@crop@ur@x\stockwidth
%\pxgtmb@PDF@setbp\pxgtmb@PDF@crop@ur@y\stockheight
\pxgtmb@PDF@setbp\pxgtmb@PDF@trim@ll@x{\dimexpr(\stockwidth-\paperwidth)/2}
\pxgtmb@PDF@setbp\pxgtmb@PDF@trim@ll@y{\dimexpr(\stockheight-\paperheight)/2}
\pxgtmb@PDF@setbp\pxgtmb@PDF@trim@ur@x{\dimexpr(\stockwidth+\paperwidth)/2}
\pxgtmb@PDF@setbp\pxgtmb@PDF@trim@ur@y{\dimexpr(\stockheight+\paperheight)/2}
\pxgtmb@PDF@setbp\pxgtmb@PDF@bleed@ll@x{\dimexpr(\stockwidth-\paperwidth)/2-3mm}
\pxgtmb@PDF@setbp\pxgtmb@PDF@bleed@ll@y{\dimexpr(\stockheight-\paperheight)/2-3mm}
\pxgtmb@PDF@setbp\pxgtmb@PDF@bleed@ur@x{\dimexpr(\stockwidth+\paperwidth)/2+3mm}
\pxgtmb@PDF@setbp\pxgtmb@PDF@bleed@ur@y{\dimexpr(\stockheight+\paperheight)/2+3mm}
\xdef\pxgtmb@PDF@CTM{%
  %% CropBox: implicit (same as MediaBox, large paper size)
  %/CropBox  [0 0 \pxgtmb@PDF@crop@ur@x\space \pxgtmb@PDF@crop@ur@y]
  %% BleedBox: explicit (final paper size + surrounding 3mm)
  \noexpand\pxgtmb@PDF@begin
  /BleedBox [\pxgtmb@PDF@bleed@ll@x\space
             \pxgtmb@PDF@bleed@ll@y\space
             \pxgtmb@PDF@bleed@ur@x\space
             \pxgtmb@PDF@bleed@ur@y] \noexpand\pxgtmb@PDF@end
  %% TrimBox: explicit (final paper size)
  \noexpand\pxgtmb@PDF@begin
  /TrimBox  [\pxgtmb@PDF@trim@ll@x\space
             \pxgtmb@PDF@trim@ll@y\space
             \pxgtmb@PDF@trim@ur@x\space
             \pxgtmb@PDF@trim@ur@y] \noexpand\pxgtmb@PDF@end
  %% ArtBox: implicit
}
\endgroup
%% supported drivers: dvips, dvipdfmx, pdfTeX, LuaTeX
\ifnum0\ifx\pdfvariable\@undefined\else\the\outputmode\fi=0\relax
\ifnum0\ifx\pdfpageattr\@undefined\else\the\pdfoutput\fi=0\relax
  %% for DVI output
  \ifx\pxgtmb@driver\@undefined % driver option unavailable
    % check graphics/graphicx/color status
    \ifx\Gin@driver\@undefined
      \PackageError{\pxgtmb@pkgname}{%
        Option `pdfbox' is driver-dependent!\MessageBreak
        Please add a driver option, or load\MessageBreak
        `graphics' or `color' beforehand}\@ehc
      \def\pxgtmb@driver{dvips.def}% fallback
    \else
      \let\pxgtmb@driver\Gin@driver
    \fi
  \else % driver option available
    % check consistency
    \ifx\Gin@driver\@undefined\else
      \ifx\pxgtmb@driver\Gin@driver\else
        \PackageError{\pxgtmb@pkgname}{%
          Inconsistent driver option!\MessageBreak
          Package `graphics' or `color' already\MessageBreak
          loaded with different driver option}\@ehc
        \let\pxgtmb@driver\Gin@driver % ignore user option
      \fi
    \fi
  \fi
  % required for putting \special to every page
  \ifx\pfmtname\@undefined
    \RequirePackage{atbegshi}
  \else
    \IfFileExists{pxatbegshi.sty}
                 {\RequirePackage{pxatbegshi}}
                 {\RequirePackage{atbegshi}}
  \fi
  \def\pxgtmb@tempa{dvipdfmx.def}\ifx\pxgtmb@driver\pxgtmb@tempa
    %% for dvipdfmx
    \def\pxgtmb@PDF@begin{}\def\pxgtmb@PDF@end{}
    \edef\pxgtmb@PDF@CTM{{pdf:put @thispage << \pxgtmb@PDF@CTM >>}}
  \else\def\pxgtmb@tempa{dvips.def}\ifx\pxgtmb@driver\pxgtmb@tempa
    %% for dvips
    \def\pxgtmb@PDF@begin{[ }\def\pxgtmb@PDF@end{/PAGE pdfmark }
    \edef\pxgtmb@PDF@CTM{{ps:SDict begin \pxgtmb@PDF@CTM end}}
  \else
    %% for others
    \PackageError{\pxgtmb@pkgname}{%
      Only dvips/dvipdfmx is supported!}\@ehc
    \edef\pxgtmb@PDF@CTM{{}}% dummy
  \fi\fi
  % emit \special to every page
  \AtBeginShipout{\setbox\AtBeginShipoutBox=\vbox{%
     \baselineskip\z@skip\lineskip\z@skip\lineskiplimit\z@
     % force paper size
     \special{papersize=\the\stockwidth,\the\stockheight}%
     % emit pdf boxes
     \expandafter\special\pxgtmb@PDF@CTM
     \copy\AtBeginShipoutBox}}
\else
  %% for pdfTeX
  \def\pxgtmb@driver{pdftex.def}
  \def\pxgtmb@PDF@begin{}\def\pxgtmb@PDF@end{}
  \edef\pxgtmb@PDF@CTM{{\pxgtmb@PDF@CTM}}
  % force paper size
  \pdfpagewidth\stockwidth \pdfpageheight\stockheight
  % emit pdf boxes
  \expandafter\pdfpageattr\pxgtmb@PDF@CTM
\fi
\else
  %% for LuaTeX
  \def\pxgtmb@driver{luatex.def}
  \def\pxgtmb@PDF@begin{}\def\pxgtmb@PDF@end{}
  \edef\pxgtmb@PDF@CTM{pageattr{\pxgtmb@PDF@CTM}}
  % force paper size
  \pagewidth\stockwidth \pageheight\stockheight
  % emit pdf boxes
  \expandafter\pdfvariable\pxgtmb@PDF@CTM
\fi
\fi

%% user interface
\newcommand{\settombowbanner}[1]{%
  \iftombowdate\else
    \PackageWarning{\pxgtmb@pkgname}{%
      Package option `tombowbanner' is not effective.\MessageBreak
      The banner may be discarded}%
  \fi
  \@bannertoken{#1}\maketombowbox}
\newcommand{\settombowbannerfont}[1]{%
  \font\@bannerfont=#1\relax \maketombowbox}
\newcommand{\settombowwidth}[1]{%
  \setlength{\@tombowwidth}{#1}\maketombowbox}

%% patch internal for pdfpages to work with tombow
%% (tested on pdfpages 2017/10/31 v0.5l)
\def\pxgtmb@patch@pdfpages{%
  \RequirePackage{etoolbox}
  \patchcmd{\AM@output}{%
    \setlength{\@tempdima}{\AM@xmargin}%
    \edef\AM@xmargin{\the\@tempdima}%
    \setlength{\@tempdima}{\AM@ymargin}%
    \edef\AM@ymargin{\the\@tempdima}%
  }{%
    \setlength{\@tempdima}{\AM@xmargin\iftombow+1in\fi}%
    \edef\AM@xmargin{\the\@tempdima}%
    \setlength{\@tempdima}{\AM@ymargin\iftombow-1in\fi}%
    \edef\AM@ymargin{\the\@tempdima}%
  }
  {\PackageInfo{\pxgtmb@pkgname}{Patch for pdfpages applied}}
  {\PackageWarningNoLine{\pxgtmb@pkgname}{Patch for pdfpages failed}}%
  }
\AtBeginDocument{\@ifpackageloaded{pdfpages}{\pxgtmb@patch@pdfpages}{}}

\endinput
